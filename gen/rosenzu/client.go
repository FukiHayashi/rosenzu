// Code generated by goa v3.11.1, DO NOT EDIT.
//
// rosenzu client
//
// Command:
// $ goa gen rosenzu/design

package rosenzu

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "rosenzu" service client.
type Client struct {
	FindEndpoint goa.Endpoint
}

// NewClient initializes a "rosenzu" service client given the endpoints.
func NewClient(find goa.Endpoint) *Client {
	return &Client{
		FindEndpoint: find,
	}
}

// Find calls the "find" endpoint of the "rosenzu" service.
// Find may return the following errors:
//   - "Unauthorized" (type *goa.ServiceError)
//   - "BadRequest" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Find(ctx context.Context, p *FindPayload) (res *Line, err error) {
	var ires interface{}
	ires, err = c.FindEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Line), nil
}
